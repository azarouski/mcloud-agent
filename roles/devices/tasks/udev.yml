---

- name: Get OS name
  shell: uname
  register: os

- name: Check OS compatibility
  ansible.builtin.assert:
    that:
      - os.stdout is search("Linux")
    fail_msg: "OS version is not compatible!"

- name: Check if roles/devices/vars/main.yml file is generated
  stat: path=roles/devices/vars/main.yml
  register: main_yml

- name: Verify Setup
  fail:
    msg: "You have to setup services in advance using: ./zebrunner.sh setup!"
  when: not main_yml.stat.exists

- name: Read devices and check for duplicates
  include_vars:
    file: roles/devices/vars/main.yml
  register: devices
  failed_when: devices.result.find(item=item) is not -1  # Check for duplicates
  loop: "{{ devices.result }}"
  vars:
    duplicates: "{{ lookup('dict', devices.result, key='id') }}"  # Build dict for lookup

  fail:
    msg: "Found duplicate device: {{ item.id }}"  # Throw error with message
  when: duplicates[item.id] is defined

- name: copy script to launch container with appium for device
  template: src=zebrunner-farm dest=/usr/local/bin/ mode=755

- name: copy rules to launch script on connected device
  template: src=90_mcloud.rules dest=/etc/udev/rules.d/

- name: copy devices details
  template: src=mcloud-devices.txt dest=/usr/local/bin/

- name: restart udev
  command: udevadm control --reload

- name: Mask usbmuxd service
  command: systemctl mask usbmuxd && systemctl stop usbmuxd && systemctl status usbmuxd
  ignore_errors: true
