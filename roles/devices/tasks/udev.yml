---

- name: Get OS name
  shell: uname
  register: os

- name: Check OS compatibility
  ansible.builtin.assert:
    that:
      - os.stdout is search("Linux")
    fail_msg: "OS version is not compatible!"

- name: Check if roles/devices/vars/main.yml file is generated
  stat: path=roles/devices/vars/main.yml
  register: main_yml

- name: Verify Setup
  fail:
    msg: "You have to setup services in advance using: ./zebrunner.sh setup!"
  when: not main_yml.stat.exists

- name: Check for duplicate device IDs based on 'id' parameter (removing hyphens)
  vars:
    devices_id_list: "{{ devices | map(attribute='id') | map('regex_replace', '-', '') }}"
    devices_id_list_unique: "{{ devices | map(attribute='id') | map('regex_replace', '-', '') | unique }}"
    diff_list: "{{ devices_id_list | difference(devices_id_list_unique) }}"
  ansible.builtin.assert:
    that:
      - diff_list | length == 0
    fail_msg: "Duplicates {{ diff_list }} found in main.yaml file"
    success_msg: "Duplicates {{ diff_list }} not found in main.yaml file"

- name: copy script to launch container with appium for device
  template: src=zebrunner-farm dest=/usr/local/bin/ mode=755

- name: copy rules to launch script on connected device
  template: src=90_mcloud.rules dest=/etc/udev/rules.d/

- name: copy devices details
  template: src=mcloud-devices.txt dest=/usr/local/bin/

- name: restart udev
  command: udevadm control --reload

- name: Mask usbmuxd service
  command: systemctl mask usbmuxd && systemctl stop usbmuxd && systemctl status usbmuxd
  ignore_errors: true
